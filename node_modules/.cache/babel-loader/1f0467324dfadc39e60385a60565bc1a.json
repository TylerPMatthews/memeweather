{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tylermatthews/Desktop/Home-Projects/Weather/weatherapp/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst BASE = \"api.openweathermap.org/data/2.5/weather?q=\";\nconst API_KEY = \"fdecff23904fee4cca33c1d32dd8b12a\";\nexport default function Weather(props) {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/forecast.json?key=10cae7ec92fa4e47ac933047200611&q=${query}&days=1 `).then(res => {\n      const apiData = res.data;\n      setWeather(apiData);\n      setQuery(\"\");\n      console.log(weather);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }); //current date\n\n  const buildDate = d => {\n    let months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year} `;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.location.name, \" , \", weather.location.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-container\",\n        children: buildDate(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", weather.current.temp_f, \"f\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", weather.current.condition.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.current.condition.icon,\n          alt: weather.current.condition.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind MPH: \", weather.current.wind_mph, \" mph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Degree: \", weather.current.wind_degree, \" degrees\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Direction: \", weather.current.wind_dir]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"PLVaRObyhff+MyH/8uM5tsIqCcM=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/tylermatthews/Desktop/Home-Projects/Weather/weatherapp/src/components/Weather.js"],"names":["React","useState","useEffect","axios","BASE","API_KEY","Weather","props","weather","setWeather","query","setQuery","get","then","res","apiData","data","console","log","catch","err","buildDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","search","location","name","region","Date","current","temp_f","condition","text","icon","code","wind_mph","wind_degree","wind_dir"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst BASE = \"api.openweathermap.org/data/2.5/weather?q=\";\nconst API_KEY = \"fdecff23904fee4cca33c1d32dd8b12a\";\nexport default function Weather(props) {\n  const [weather, setWeather] = useState([]);\n  const [query, setQuery] = useState(\"\");\nuseEffect(()=>{\n  axios\n  .get(\n    `http://api.weatherapi.com/v1/forecast.json?key=10cae7ec92fa4e47ac933047200611&q=${query}&days=1 `\n  )\n  .then((res) => {\n    const apiData = res.data;\n    setWeather(apiData);\n    setQuery(\"\");\n    console.log(weather);\n  })\n  .catch((err) => {\n    console.log(\"error\");\n  });\n})\n \n  //current date\n  const buildDate = (d) => {\n    let months = [\n      \"January\",\n      \"Febuary\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year} `;\n  };\n\n  return (\n    <div>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          ></input>\n        </div>\n            <div className=\"location-container\">\n              <h2>\n                {weather.location.name} , {weather.location.region}\n              </h2>\n            </div>\n            <div className=\"date-container\">{buildDate(new Date())}</div>\n            <div className=\"weather-container\">\n              <p>Temp: {weather.current.temp_f}f</p>\n              <p>Condition: {weather.current.condition.text}</p>\n              <img\n                src={weather.current.condition.icon}\n                alt={weather.current.condition.code}\n              />\n              <p>Wind MPH: {weather.current.wind_mph} mph</p>\n              <p>Wind Degree: {weather.current.wind_degree} degrees</p>\n              <p>Wind Direction: {weather.current.wind_dir}</p>\n            </div>\n       \n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}