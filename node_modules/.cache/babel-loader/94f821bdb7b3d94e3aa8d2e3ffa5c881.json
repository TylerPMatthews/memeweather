{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tylermatthews/Desktop/Home-Projects/Weather App Folder/WeatherApp/weatherapp/src/components/Weather.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nconst StyledWeather = styled.div`\nh2{\n  font-size:1.3rem;\n\n}\np{\n  text-align:center;\n}\n.date-container{\n  display:flex;\n  justify-content:center;\n}\n.img-container{\n  display:flex;\n  justify-content:center;\n}\n\n\n`;\n_c = StyledWeather;\nexport default function Weather(props) {\n  //current date\n  const buildDate = d => {\n    let months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year} `; //meme helper\n\n    function memeHelper() {\n      if (props.weather.current.temp_f <= '32') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.pinimg.com/564x/54/aa/a7/54aaa70af6c704c25b6209899b4c7ccf.jpg\",\n            alt: \"funny weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledWeather, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [props.weather.location.name, \" , \", props.weather.location.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-container\",\n          children: buildDate(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temp: \", props.weather.current.temp_f, \"f\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Condition: \", props.weather.current.condition.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.weather.current.condition.icon,\n              alt: props.weather.current.condition.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind MPH: \", props.weather.current.wind_mph, \" mph\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Degree: \", props.weather.current.wind_degree, \" degrees\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Direction: \", props.weather.current.wind_dir]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", props.weather.current.humidity, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Feels like: \", props.weather.current.feelslike_f, \" f\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Weather;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledWeather\");\n$RefreshReg$(_c2, \"Weather\");","map":{"version":3,"sources":["/Users/tylermatthews/Desktop/Home-Projects/Weather App Folder/WeatherApp/weatherapp/src/components/Weather.js"],"names":["React","useState","axios","styled","StyledWeather","div","Weather","props","buildDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","memeHelper","weather","current","temp_f","location","name","region","Date","condition","text","icon","code","wind_mph","wind_degree","wind_dir","humidity","feelslike_f"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nconst StyledWeather = styled.div`\nh2{\n  font-size:1.3rem;\n\n}\np{\n  text-align:center;\n}\n.date-container{\n  display:flex;\n  justify-content:center;\n}\n.img-container{\n  display:flex;\n  justify-content:center;\n}\n\n\n`;\nexport default function Weather(props) {\n  //current date\n  const buildDate = (d) => {\n    let months = [\n      \"January\",\n      \"Febuary\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year} `;\n\n     //meme helper\n\n  function memeHelper(){\n    if(props.weather.current.temp_f <= '32'){\n      return <div className='meme-container'>\n      <img src='https://i.pinimg.com/564x/54/aa/a7/54aaa70af6c704c25b6209899b4c7ccf.jpg' alt='funny weather' />\n        </div>\n    }\n  }\n  };\n\n  return (\n    <StyledWeather>\n      <main>\n        <div>\n          <div className=\"location-container\">\n            <h2>\n              {props.weather.location.name} , {props.weather.location.region}\n            </h2>\n          </div>\n          <div className=\"date-container\">{buildDate(new Date())}</div>\n          \n          <div className=\"weather-container\">\n            <p>Temp: {props.weather.current.temp_f}f</p>\n            <p>Condition: {props.weather.current.condition.text}</p>\n            <div className='img-container'>\n            <img\n              src={props.weather.current.condition.icon}\n              alt={props.weather.current.condition.code}\n            />\n            </div>\n            <p>Wind MPH: {props.weather.current.wind_mph} mph</p>\n            <p>Wind Degree: {props.weather.current.wind_degree} degrees</p>\n            <p>Wind Direction: {props.weather.current.wind_dir}</p>\n            <p>Humidity: {props.weather.current.humidity} %</p>\n            <p>Feels like: {props.weather.current.feelslike_f} f</p>\n          </div>\n        </div>\n      </main>\n    </StyledWeather>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}