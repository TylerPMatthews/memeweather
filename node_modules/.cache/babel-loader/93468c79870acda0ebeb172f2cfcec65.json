{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tylermatthews/Desktop/Weather/weatherapp/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst BASE = \"api.openweathermap.org/data/2.5/\";\nconst API_KEY = \"fdecff23904fee4cca33c1d32dd8b12a\";\nexport default function Weather(props) {\n  _s();\n\n  const [location, setLocation] = useState(true);\n  const [weather, setWeather] = useState(true);\n  const [query, setQuery] = useState('');\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      axios.get(`${BASE}weather?q=${query}&units=imperial&APPID=${API_KEY} `).then(res => {\n        const apiData = res.data;\n        setLocation(apiData);\n        console.log(apiData);\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    }\n  }; //current date\n\n\n  const buildDate = d => {\n    let months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year} `;\n  }; // //Weather data from the API\n  // useEffect(() => {\n  //   axios\n  //     .get(\n  //       `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n  //     )\n  //     .then((res) => {\n  //       const locationRes = res.data.location;\n  //       setLocation(locationRes);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error\");\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   axios\n  //     .get(\n  //       `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n  //     )\n  //     .then((res) => {\n  //       const weatherRes = res.data.current;\n  //       setWeather(weatherRes);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error\");\n  //     });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-container\",\n      children: buildDate(new Date())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"4xmNnHjd/Mdw+EG0P8dw6HxN5R4=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/tylermatthews/Desktop/Weather/weatherapp/src/components/Weather.js"],"names":["React","useEffect","useState","axios","BASE","API_KEY","Weather","props","location","setLocation","weather","setWeather","query","setQuery","search","evt","key","get","then","res","apiData","data","console","log","catch","err","buildDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,kCAAb;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMY,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAGA,GAAG,CAACC,GAAJ,KAAY,OAAf,EAAuB;AACrBb,MAAAA,KAAK,CACJc,GADD,CAEG,GAAEb,IAAK,aAAYQ,KAAM,yBAAwBP,OAAQ,GAF5D,EAICa,IAJD,CAIOC,GAAD,IAAS;AACb,cAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;AACAZ,QAAAA,WAAW,CAACW,OAAD,CAAX;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,OARD,EASCI,KATD,CASQC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAXD;AAYD;AACF,GAfD,CALqC,CAqBrC;;;AACA,QAAMG,SAAS,GAAIC,CAAD,IAAO;AACvB,QAAIC,MAAM,GAAG,CACX,SADW,EAEX,SAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,SAVW,EAWX,UAXW,EAYX,UAZW,CAAb;AAcA,UAAMC,IAAI,GAAG,CACX,QADW,EAEX,QAFW,EAGX,SAHW,EAIX,WAJW,EAKX,UALW,EAMX,QANW,EAOX,UAPW,CAAb;AASA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,GAAvC;AACD,GA9BD,CAtBqC,CAsDrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCV,SAAS,CAAC,IAAIY,IAAJ,EAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlGuBhC,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst BASE = \"api.openweathermap.org/data/2.5/\";\nconst API_KEY = \"fdecff23904fee4cca33c1d32dd8b12a\";\nexport default function Weather(props) {\n  const [location, setLocation] = useState(true);\n  const [weather, setWeather] = useState(true);\n  const [query,setQuery] = useState('');\n\n  const search = evt => {\n    if(evt.key === 'Enter'){\n      axios\n      .get(\n        `${BASE}weather?q=${query}&units=imperial&APPID=${API_KEY} `\n      )\n      .then((res) => {\n        const apiData = res.data;\n        setLocation(apiData);\n        console.log(apiData)\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n    }\n  }\n  //current date\n  const buildDate = (d) => {\n    let months = [\n      \"January\",\n      \"Febuary\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year} `;\n  };\n\n  // //Weather data from the API\n  // useEffect(() => {\n  //   axios\n  //     .get(\n  //       `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n  //     )\n  //     .then((res) => {\n  //       const locationRes = res.data.location;\n  //       setLocation(locationRes);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error\");\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   axios\n  //     .get(\n  //       `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n  //     )\n  //     .then((res) => {\n  //       const weatherRes = res.data.current;\n  //       setWeather(weatherRes);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error\");\n  //     });\n  // }, []);\n\n  return (\n    <div>\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search...\"\n        ></input>\n      </div>\n      <div className=\"location-container\">\n     \n      </div>\n      <div className=\"date-container\">{buildDate(new Date())}</div>\n      <div className='weather-container'></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}