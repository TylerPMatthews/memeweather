{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tylermatthews/Desktop/Weather/weatherapp/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst BASE = 'api.openweathermap.org/data/2.5/';\nconst API_KEY = 'fdecff23904fee4cca33c1d32dd8b12a';\nexport default function Weather(props) {\n  _s();\n\n  const [location, setLocation] = useState(true);\n  const [weather, setWeather] = useState(true);\n\n  const buildDate = d => {\n    let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getmonths()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year} `;\n  }; //Weather data from the API\n\n\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`).then(res => {\n      const locationRes = res.data.location;\n      setLocation(locationRes);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`).then(res => {\n      const weatherRes = res.data.current;\n      setWeather(weatherRes);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [location.name, \" , \", location.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), buildDate(new Date()), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tempature: \", weather.temp_f, \"f\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"6sE3mFWRQDfd5RfhqViCg98I8vE=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/tylermatthews/Desktop/Weather/weatherapp/src/components/Weather.js"],"names":["React","useEffect","useState","axios","BASE","API_KEY","Weather","props","location","setLocation","weather","setWeather","buildDate","d","months","days","day","getDay","date","getDate","month","getmonths","year","getFullYear","get","then","res","locationRes","data","catch","err","console","log","weatherRes","current","name","region","Date","temp_f"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,kCAAb;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AAEF,QAAMU,SAAS,GAAIC,CAAD,IAAO;AACvB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,OAAhC,EAAyC,KAAzC,EAAgD,MAAhD,EAAwD,MAAxD,EAAgE,QAAhE,EAA0E,WAA1E,EAAuF,SAAvF,EAAkG,UAAlG,EAA8G,UAA9G,CAAb;AACA,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;AACA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,SAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,GAAvC;AACD,GATD,CAJuC,CAerC;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFqB,GADH,CAEK,2FAFL,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,YAAMC,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASpB,QAA7B;AACAC,MAAAA,WAAW,CAACkB,WAAD,CAAX;AACD,KAPH,EAQGE,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAaA/B,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFqB,GADH,CAEK,2FAFL,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,YAAMO,UAAU,GAAGP,GAAG,CAACE,IAAJ,CAASM,OAA5B;AACAvB,MAAAA,UAAU,CAACsB,UAAD,CAAV;AACD,KAPH,EAQGJ,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,WAAW,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACA;AAAA,mBACGxB,QAAQ,CAAC2B,IADZ,SACqB3B,QAAQ,CAAC4B,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJF,EASGxB,SAAS,CAAC,IAAIyB,IAAJ,EAAD,CATZ,eAUE;AAAA,gCAAe3B,OAAO,CAAC4B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzDuBhC,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst BASE = 'api.openweathermap.org/data/2.5/'\nconst API_KEY = 'fdecff23904fee4cca33c1d32dd8b12a'\nexport default function Weather(props) {\n  const [location, setLocation] = useState(true);\n  const [weather, setWeather] = useState(true);\n\nconst buildDate = (d) => {\n  let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getmonths()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year} `\n}\n \n  //Weather data from the API\n  useEffect(() => {\n    axios\n      .get(\n        `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n      )\n      .then((res) => {\n        const locationRes = res.data.location;\n        setLocation(locationRes);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n  useEffect(() => {\n    axios\n      .get(\n        `http://api.weatherapi.com/v1/current.json?key=10cae7ec92fa4e47ac933047200611&q=pittsburgh`\n      )\n      .then((res) => {\n        const weatherRes = res.data.current;\n        setWeather(weatherRes);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className='search-box'>\n      <input type='text' className='search-bar' placeholder='Search...'></input>\n      </div>\n      <div className='location-container'>\n      <h3>\n        {location.name} , {location.region}\n      </h3>\n      </div>\n      {buildDate(new Date())}\n      <p>Tempature: {weather.temp_f}f</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}